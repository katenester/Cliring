openapi: 3.0.3
info:
  title: API Модуля Клиринга
  description: API для управления сделками, заказами и денежными расчетами.
  version: 1.0.0
servers:
  - url: http://localhost:8081/v1
    description: Основной сервер
components:
  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  schemas:
    Error:
      type: object
      properties:
        error:
          type: object
          properties:
            code:
              type: string
              example: ERR_INVALID_INPUT
            message:
              type: string
              example: Ошибка валидации
            details:
              type: object
      required:
        - error
    Deal:
      type: object
      properties:
        deal_id:
          type: integer
          example: 1
        dealership_id:
          type: integer
          example: 1
        manager_id:
          type: integer
          example: 1
        client_id:
          type: integer
          example: 1
      required:
        - deal_id
        - is_completed
        - created_at
        - updated_at
        - client_id
    Order:
      type: object
      properties:
        order_id:
          type: integer
          example: 1
        deal_id:
          type: integer
          example: 1
        order_type_id:
          type: integer
          example: 1
        amount:
          type: number
          format: float
          example: 100.00
        status:
          type: string
          enum: [pending, executed, cancelled]
          example: pending
        created_at:
          type: string
          format: date-time
          example: 2025-05-01T10:00:00Z
        updated_at:
          type: string
          format: date-time
          example: 2025-05-01T10:00:00Z
        need_and_orders_id:
          type: integer
          example: 123
          nullable: true
        bank_id:
          type: integer
          example: 1
          nullable: true
      required:
        - order_id
        - deal_id
        - order_type_id
        - amount
        - status
        - created_at
        - updated_at
    OrderCreate:
      type: object
      properties:
        deal_id:
          type: integer
          example: 1
        order_type_id:
          type: integer
          example: 1
        amount:
          type: number
          format: float
          example: 100.00
        need_and_orders_id:
          type: integer
          example: 123
          nullable: true
        bank_id:
          type: integer
          example: 1
          nullable: true
      required:
        - deal_id
        - order_type_id
        - amount
    MonetarySettlement:
      type: object
      properties:
        monetary_settlement_id:
          type: integer
          example: 1
        deal_id:
          type: integer
          example: 1
        amount:
          type: number
          format: float
          example: 120.00
        status:
          type: string
          enum: [pending, executed, cancelled]
          example: pending
        created_at:
          type: string
          format: date-time
          example: 2025-05-01T10:00:00Z
        updated_at:
          type: string
          format: date-time
          example: 2025-05-01T10:00:00Z
        bank_id:
          type: integer
          example: 1
          nullable: true
      required:
        - monetary_settlement_id
        - deal_id
        - amount
        - status
        - created_at
        - updated_at
    MonetarySettlementCreate:
      type: object
      properties:
        deal_id:
          type: integer
          example: 1
        amount:
          type: number
          format: float
          example: 120.00
        status:
          type: string
          enum: [pending, executed, cancelled]
          example: pending
        bank_id:
          type: integer
          example: 1
          nullable: true
      required:
        - deal_id
        - amount
paths:
  /deals:
    post:
      summary: Создать новую сделку
      description: Создает новую сделку.
      operationId: createDeal
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Deal'
      responses:
        '201':
          description: Сделка создана
        '400':
          description: Неверный запрос
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Неавторизован
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /deals/{deal_id}:
    delete:
      summary: Удалить сделку
      description: Удаляет сделку по её ID.
      operationId: deleteDeal
      security:
        - BearerAuth: []
      parameters:
        - name: deal_id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Сделка удалена
        '404':
          description: Сделка не найдена
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Неавторизован
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /orders:
    get:
      summary: Получить список всех взаиморасчётов с типом "Заказ"
      description: Возвращает постраничный список всех взаиморасчётов с типом "Заказ" для указанного клиента.
      operationId: listOrders
      security:
        - BearerAuth: []
      parameters:
        - name: client_id
          in: query
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Успешный ответ
          content:
            application/json:
              schema:
                type: object
                properties:
                  orders:
                    type: array
                    items:
                      $ref: '#/components/schemas/Order'
                  total:
                    type: integer
                    example: 100
        '400':
          description: Неверный запрос
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Неавторизован
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    post:
      summary: Создать взаиморасчёты с типом "Заказ"
      description: Создает несколько взаиморасчётов с типом "Заказ" для указанного клиента.
      operationId: createOrder
      security:
        - BearerAuth: []
      parameters:
        - name: client_id
          in: query
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/OrderCreate'
      responses:
        '201':
          description: Заказы созданы
        '400':
          description: Неверный запрос
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Неавторизован
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /orders/{order_id}:
    put:
      summary: Обновить взаиморасчёты с типом "Заказ"
      description: Обновляет взаиморасчёты с типом "Заказ" по ID заказа.
      operationId: updateOrder
      security:
        - BearerAuth: []
      parameters:
        - name: order_id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/OrderCreate'
      responses:
        '200':
          description: Заказ обновлен
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
        '400':
          description: Неверный запрос
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Неавторизован
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Заказ не найден
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /monetary-settlements:
    get:
      summary: Получить список денежных расчетов взаиморасчётов с типом "Денежный платёж"
      description: Возвращает постраничный список всех взаиморасчётов с типом "Денежный платёж".
      operationId: listMonetarySettlements
      security:
        - BearerAuth: []
      parameters:
        - name: deal_id
          in: query
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Успешный ответ
          content:
            application/json:
              schema:
                type: object
                properties:
                  settlements:
                    type: array
                    items:
                      $ref: '#/components/schemas/MonetarySettlement'
                  total:
                    type: integer
                    example: 100
        '400':
          description: Неверный запрос
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Неавторизован
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'